<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputFolderName>Editor</OutputFolderName>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net8.0-windows</TargetFramework>
        <UseWPF>true</UseWPF>
        <ImplicitUsings>enable</ImplicitUsings>
        <NoWarn>CA1812</NoWarn>
    </PropertyGroup>

    <ItemGroup>
        <Using Include="CommunityToolkit.Mvvm.Input" />
        <Using Include="Microsoft.Win32" />
        <Using Include="NovaEditor.Controls" />
        <Using Include="NovaEditor.Controls.Icons" />
        <Using Include="NovaEditor.Controls.Panels" />
        <Using Include="NovaEditor.Managers" />
        <Using Include="NovaEditor.Options" />
        <Using Include="NovaEditor.ViewModels" />
        <Using Include="NovaEditor.Windows" />
        <Using Include="NovaEditor.Workspace" />
        <Using Include="NovaEngine.Common.Windows.Api" />
        <Using Include="NovaEngine.ContentPipeline" />
        <Using Include="NovaEngine.Core" />
        <Using Include="NovaEngine.Extensions" />
        <Using Include="NovaEngine.Globalisation" />
        <Using Include="NovaEngine.SceneManagement" />
        <Using Include="System.Collections" />
        <Using Include="System.Collections.Immutable" />
        <Using Include="System.Collections.ObjectModel" />
        <Using Include="System.Collections.Specialized" />
        <Using Include="System.Diagnostics.CodeAnalysis" />
        <Using Include="System.Globalization" />
        <Using Include="System.IO" />
        <Using Include="System.Reflection" />
        <Using Include="System.Runtime.CompilerServices" />
        <Using Include="System.Runtime.InteropServices" />
        <Using Include="System.Text.Json" />
        <Using Include="System.Text.Json.Serialization" />
        <Using Include="System.Windows" />
        <Using Include="System.Windows.Controls" />
        <Using Include="System.Windows.Controls.Primitives" />
        <Using Include="System.Windows.Data" />
        <Using Include="System.Windows.Input" />
        <Using Include="System.Windows.Interop" />
        <Using Include="System.Windows.Media" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="CommunityToolkit.Mvvm" Version="8.1.0" />
        <PackageReference Include="Microsoft-WindowsAPICodePack-Shell" Version="1.1.4" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\NovaEngine.Common.Windows\NovaEngine.Common.Windows.csproj">
            <Private>False</Private>
        </ProjectReference>

        <ProjectReference Include="..\NovaEngine\NovaEngine.csproj">
            <Private>False</Private>
        </ProjectReference>
    </ItemGroup>

    <!--
    calculate all the NovaEngine* projects to build before the editor, this is so all the projects are included in the
    embedded engine for the editor 
    
    these can't really be handled through project references as projects that aren't included in the solution should still be copied over.
    if, for example, the project is an implementation of a platform that can't be open source due to console development licensing
    
    this will also build test projects which isn't ideal, but doesn't really matter. the important part is that it doesn't build the editor
    itself as that would be a circular reference
    -->
    <Target Name="CalculateProjectsToBuild" BeforeTargets="BeforeBuild">
        <ItemGroup>
            <EngineProjects Include="..\..\..\..\NovaEngine%2A\*.csproj" />
        </ItemGroup>

        <CreateItem Include="@(EngineProjects->'$(TargetDir)\%(Identity)')">
            <Output TaskParameter="Include" ItemName="ProjectsToBuild" />
        </CreateItem>
    </Target>

    <!-- build all the projects found above -->
    <Target Name="BuildEngineProjects" BeforeTargets="BeforeBuild">
        <MSBuild Projects="%(ProjectsToBuild.FullPath)" Targets="Build" Properties="Configuration=$(Configuration);Platform=$(Platform)" />
    </Target>

    <!-- copy all the previously build projects into the embedded engine folder out of output directory -->
    <Target Name="CopyEngineFilesToEmbeddedEngine" AfterTargets="AfterBuild">
        <ItemGroup>
            <EngineFiles Include="$(OutDir)\..\..\Engine\$(Configuration)\*.*" />
        </ItemGroup>

        <Copy SourceFiles="@(EngineFiles)" DestinationFolder="$(OutDir)/EmbeddedEngine" />
    </Target>

</Project>
